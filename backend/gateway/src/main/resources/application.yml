spring:
  application:
    name: gateway
  security:
    user:
      name: ${GATEWAY_USER}
      password: ${GATEWAY_PASSWORD}
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'http://localhost:5173'
              - 'https://localhost:5173'
              - 'https://j11a601.p.ssafy.io/'
              - 'https://olivepay.co.kr/'
            allowedMethods:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
            allowedHeaders:
              - '*'
            exposedHeaders:
              - 'Content-Disposition'
            allowCredentials: true

      routes:
        - id: auth-service
          uri: lb://auth
          predicates:
            - Path=/api/auths/**, /api/auth-swagger/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
            - name: AddRequestHeaderFilter

        - id: common-service
          uri: lb://common
          predicates:
            - Path=/api/commons/**, /api/common-swagger/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
            - name: AddRequestHeaderFilter

        - id: member-service
          uri: lb://member
          predicates:
            - Path=/api/members/**, /api/member-swagger/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
            - name: AddRequestHeaderFilter

        - id: card-service
          uri: lb://card
          predicates:
            - Path=/api/cards/**, /api/card-swagger/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
            - name: AddRequestHeaderFilter

        - id: donation-service
          uri: lb://donation
          predicates:
            - Path=/api/donations/**, /api/donation-swagger/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
            - name: AddRequestHeaderFilter

        - id: franchise-service
          uri: lb://franchise
          predicates:
            - Path=/api/franchises/**, /api/franchise-swagger/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
            - name: AddRequestHeaderFilter

        - id: payment-service
          uri: lb://payment
          predicates:
            - Path=/api/payments/**, /api/payment-swagger/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
            - name: AddRequestHeaderFilter

        - id: funding-service
          uri: lb://funding
          predicates:
            - Path=/api/fundings/**, /api/funding-swagger/**
          filters:
            - name: AuthenticationFilter
            - name: AuthorizationFilter
            - name: AddRequestHeaderFilter


eureka:
  client:
    register-with-eureka: ${EUREKA_REGISTER:true}
    fetch-registry: ${EUREKA_FETCH:true}
    service-url:
      defaultZone: http://${BACKEND_SERVER}:${EUREKA_PORT}/eureka/


server:
  port: ${GATEWAY_PORT}

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    path: /swagger-ui/index.html
    config-url: /v3/api-docs/swagger-config
    urls:
      - url: /v3/api-docs
        name: API Gateway Service

      - url: /api/member-swagger/v3/api-docs
        name: Member Service

      - url: /api/auth-swagger/v3/api-docs
        name: Auth Service

      - url: /api/common-swagger/v3/api-docs
        name: Common Service

      - url: /api/card-swagger/v3/api-docs
        name: Card Service

      - url: /api/donation-swagger/v3/api-docs
        name: Donation Service

      - url: /api/franchise-swagger/v3/api-docs
        name: Franchise Service

      - url: /api/payment-swagger/v3/api-docs
        name: Payment Service

      - url: /api/funding-swagger/v3/api-docs
        name: Funding Service

jwt:
  issuer: ${JWT_ISSUER:defaultIssuer}
  secretKey: ${JWT_SECRET_KEY}

config:
  member:
    scheme: ${MEMBER_SCHEME:http}
    host: ${MEMBER_SERVER:localhost}
    path: ${MEMBER_PATH}
    port: ${MEMBER_PORT}


logging:
  level:
    org.springframework.web: "info"
    org.hibernate: "info"
#  file:
#    name: app/logs/application.log