spring:
  application:
    name: card
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    url: ${DB_URL}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true

openapi:
  service:
    title: card doc
    version: 1.0.0
springdoc:
  api-docs:
    path: /card-swagger/v3/api-docs
  swagger-ui:
    path: /card-swagger/swagger-ui.html

eureka:
  client:
    register-with-eureka: ${EUREKA_REGISTER:false}
    fetch-registry: ${EUREKA_FETCH:true}
    service-url:
      defaultZone: http://${BACKEND_SERVER}:${EUREKA_PORT}/eureka/
  instance:
    ip-address: ${SERVER_IP}
    prefer-ip-address: true
server:
  port: ${CARD_PORT}
  servlet:
    context-path: /api

logging:
  level:
    org.springframework.web: "info"
    org.hibernate: "info"
    org:
      springframework:
        security: "trace"

config:
  backend: ${BACKEND_SERVER}
  gateway-port: ${GATEWAY_PORT}
  kafka-server: ${KAFKA_SERVER}
  kafka-port: ${KAFKA_PORT}
  fintech:
    apiKey: ${apiKey}
    accountTypeUniqueNo: ${accountTypeUniqueNo}
    institutionCode: ${institutionCode}
    fintechAppNo: ${fintechAppNo}
    fintechURI: ${FINTECH_SERVER}
    card:
      products:
        KB: ${KBCard}
        SS: ${SSCard}
        LT: ${LTCard}
        WR: ${WRCard}
        SH: ${SHCard}
        DT: ${DTCard}
        HD: ${HDCard}
        BC: ${BCCard}
        NH: ${NHCard}
        HN: ${HNCard}
        IBK: ${IBKCard}